<?php
/* =========================================================================
   Project-specific configuration, scripts and handlers
   ========================================================================= */

namespace yww\devkit;

require_once('singleton.php');
<% if acf_pro_key %>
require_once(__DIR__ . '/vendor/advanced-custom-fields/advanced-custom-fields-pro/acf.php');
<% end %>

// Set content width value based on the theme's design
if (!isset($content_width)) {
	$content_width = 1440;
}

class Project extends Singleton {

	// public static variables and functions will be accessible anywhere
	// using the project namespace, eg. yww::$myVar or yww::myFunction()

	// Namespace for this project
	public static $projectNamespace = '<%= slug %>';

	// Project scripts main handle
	public static $mainHandle = '<%= slug %>-main';

	// Tag for sending variables to front-end's script
	public static $varsTag = '<%= slug %>_script_vars';

	// Menus required
	public static $menus = array('main' => 'Main menu');

	// Google Analytics ID (injected by Base class)
	public static $googleAnalyticsId = '';

	public function __construct() {

		// Project-specific tags, hooks and initialisations
<% if acf_pro_key %>
		add_filter('acf/settings/path', array($this, 'AcfSettingsPath'));
		add_filter('acf/settings/dir', array($this, 'AcfSettingsDir'));
<% end %>

	}
<% if acf_pro_key %>

	// Set ACF paths
	function AcfSettingsPath($dir) {
		return get_stylesheet_directory() . '/inc/vendor/advanced-custom-fields/advanced-custom-fields-pro/';
	}

	function AcfSettingsDir($path) {
		return get_stylesheet_directory_uri() . '/inc/vendor/advanced-custom-fields/advanced-custom-fields-pro/';
	}
<% end %>

}

// Class alias so Project can be accessed directly using project slug
if (!class_exists(Project::$projectNamespace)) {
	class_alias('yww\devkit\Project', Project::$projectNamespace);
} else {
	// Class name is taken: namespace the class alias
	class_alias('yww\devkit\Project', 'yww\devkit\\' . Project::$projectNamespace);
}

// Create a singleton instance of Project
Project::instance();
